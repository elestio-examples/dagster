version: "3.7"

services:
  postgres:
    image: postgres:11
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: ${random_password}
      POSTGRES_DB: "dagster_db"
    volumes:
      - ./pgdata:/var/lib/postgresql/data

  dagster_example_user_code:
    build:
      context: .
      dockerfile: ./app/Dockerfile_user_code
    image: dagster_example_user_code_image
    restart: always
    environment:
      DAGSTER_POSTGRES_USER: "postgres"
      DAGSTER_POSTGRES_PASSWORD: ${random_password}
      DAGSTER_POSTGRES_DB: "dagster_db"
      DAGSTER_CURRENT_IMAGE: "dagster_example_user_code_image"

  dagster_example_dagit:
    build:
      context: .
      dockerfile: ./app/Dockerfile_dagster
    entrypoint:
      - dagit
      - -h
      - "0.0.0.0"
      - -p
      - "3000"
      - -w
      - workspace.yaml
    expose:
      - "3000"
    ports:
      - "172.17.0.1:3123:3000"
    environment:
      DAGSTER_POSTGRES_USER: "postgres"
      DAGSTER_POSTGRES_PASSWORD: ${random_password}
      DAGSTER_POSTGRES_DB: "dagster_db"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./tmp/io_manager_storage:/tmp/io_manager_storage
    depends_on:
      - postgres
      - docker_example_user_code

  dagster_example_daemon:
    build:
      context: .
      dockerfile: ./app/Dockerfile_dagster
    entrypoint:
      - dagster-daemon
      - run
    restart: always
    environment:
      DAGSTER_POSTGRES_USER: "postgres"
      DAGSTER_POSTGRES_PASSWORD: ${random_password}
      DAGSTER_POSTGRES_DB: "dagster_db"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./tmp/io_manager_storage:/tmp/io_manager_storage
    depends_on:
      - postgres
      - docker_example_user_code
